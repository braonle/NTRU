#pragma once

extern "C"
{
//Должна вызываться самой первой!!!!
//Может принимать только числа: N = 167, 251, 503, означающие количество байт,
//шифрующихся за один вызов, и определяющие набор параметров шифра, если подаётся другое число, возвращает 0!
//Возвращает идентификатор сессии расшифрования
void* sessionDecInit(int n);

//Может принимать только числа: N = 167, 251, 503, означающие количество байт,
//шифрующихся за один вызов, и определяющие набор параметров шифра, если подаётся другое число, возвращает 0!
//Принимает открытый ключ, длины N
//Возвращает идентификатор сессии шифрования
//буффер нужно освобождать самостоятельно
void* sessionEncInit(int n, char* public_key);


//Возвращает в 8 раз больше данных, чем принимает!!!!!!
//Принимает текст и идентификатор сессии шифрования
//Возвращает шифротекст
//буфферы нужно освобождать самостоятельно
char* encrypt(unsigned char* data, void* id);

//Возвращает публичный ключ (N байт), который необходим для инициализации сессии шифрования
//Принимает идентификатор сессии расшифрования
//буффер нужно освобождать самостоятельно
char* getPublicKey(void* id);

//Возвращает в 8 раз меньше данных, чем принимает!!!!!!
//Принимает шифротекст и идентификатор сессии расшифрования
//буфферs нужно освобождать самостоятельно
unsigned char* decrypt(char* data, void* id);

//Завершает сессию шифрования
//Принимает идентификатор сессии
void sessionEncClose(void* id);

//Завершает сессию расшифрования
//Принимает идентификатор сессии
void sessionDecClose(void* id);

void ptrdel(void*);
}
